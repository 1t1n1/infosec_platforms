Gadgets information
============================================================
0x0000000000000bfd : adc al, 0x20 ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000000c1d : adc al, 0x20 ; add byte ptr [rax - 0x7d], cl ; ret 0x480c
0x0000000000000c3d : adc al, 0x20 ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000000b80 : adc al, 0x20 ; add byte ptr [rbx - 0x67b703bb], cl ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000b7e : adc eax, 0x2014fd ; mov eax, dword ptr [rbp - 4] ; cdqe ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000007e7 : add al, 0 ; add byte ptr [rax], al ; jmp 0x790
0x00000000000007c7 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x790
0x0000000000000b52 : add bh, al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xb95
0x000000000000079f : add bh, bh ; and eax, 0x201872 ; push 0 ; jmp 0x790
0x0000000000000927 : add bl, dh ; ret
0x000000000000086e : add byte ptr [rax + 0x39], cl ; clc ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000ac4 : add byte ptr [rax - 0x48], cl ; out dx, eax ; mov esi, 0xbeefdead ; lodsd eax, dword ptr [rsi] ; fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x000000000000087d : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rcx + 0x5d], 0xff ; loopne 0x8ed ; nop dword ptr cs:[rax + rax] ; pop rbp ; ret
0x0000000000000782 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000000008ce : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rcx + 0x5d], 0xff ; loopne 0x93e ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000000777 : add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x0000000000000bff : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000000c1f : add byte ptr [rax - 0x7d], cl ; ret 0x480c
0x0000000000000c3f : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000000923 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; repz ret
0x0000000000000b50 : add byte ptr [rax], al ; add bh, al ; cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xb95
0x0000000000000925 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000000ac2 : add byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; out dx, eax ; mov esi, 0xbeefdead ; lodsd eax, dword ptr [rsi] ; fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x0000000000000775 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x0000000000000773 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x0000000000000771 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x000000000000076f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x000000000000076d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x000000000000076e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x0000000000000770 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x0000000000000772 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x00000000000007a7 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x790
0x0000000000000b56 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xb95
0x0000000000000b4f : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000ac1 : add byte ptr [rax], al ; add byte ptr [rax], al ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x000000000000088c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000924 : add byte ptr [rax], al ; add byte ptr [rax], al ; repz ret
0x0000000000000774 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x00000000000007a9 : add byte ptr [rax], al ; jmp 0x790
0x0000000000000b58 : add byte ptr [rax], al ; jmp 0xb95
0x0000000000000b51 : add byte ptr [rax], al ; mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000ac3 : add byte ptr [rax], al ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x000000000000088e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000000092e : add byte ptr [rax], al ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x0000000000000926 : add byte ptr [rax], al ; repz ret
0x0000000000000c7a : add byte ptr [rax], al ; sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000000776 : add byte ptr [rax], al ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x000000000000092d : add byte ptr [rax], r8b ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x000000000000092f : add byte ptr [rbp + 0x48], dl ; mov ebp, esp ; pop rbp ; jmp 0x8a0
0x0000000000000b82 : add byte ptr [rbx - 0x67b703bb], cl ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x000000000000091d : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000000076b : add byte ptr [rsi], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x000000000000079e : add dil, dil ; and eax, 0x201872 ; push 0 ; jmp 0x790
0x00000000000007b7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x790
0x000000000000091e : add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; repz ret
0x0000000000000b91 : add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000008ca : add eax, 0x201721 ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000919 : add eax, 0x201759 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; repz ret
0x0000000000000879 : add eax, 0x20175a ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x000000000000086a : add eax, 0x201809 ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x000000000000077e : add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x00000000000007d7 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x790
0x0000000000000b89 : add eax, edx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000008c1 : add esi, eax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x000000000000078b : add esp, 8 ; ret
0x0000000000000b88 : add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000008c0 : add rsi, rax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x000000000000078a : add rsp, 8 ; ret
0x0000000000000842 : and bl, byte ptr [rax] ; and byte ptr [rax], al ; push 0xa ; jmp 0x790
0x000000000000091c : and byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; repz ret
0x000000000000086d : and byte ptr [rax], al ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000b81 : and byte ptr [rax], al ; mov eax, dword ptr [rbp - 4] ; cdqe ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000007a4 : and byte ptr [rax], al ; push 0 ; jmp 0x790
0x0000000000000844 : and byte ptr [rax], al ; push 0xa ; jmp 0x790
0x00000000000007b4 : and byte ptr [rax], al ; push 1 ; jmp 0x790
0x00000000000007c4 : and byte ptr [rax], al ; push 2 ; jmp 0x790
0x00000000000007d4 : and byte ptr [rax], al ; push 3 ; jmp 0x790
0x00000000000007e4 : and byte ptr [rax], al ; push 4 ; jmp 0x790
0x00000000000007f4 : and byte ptr [rax], al ; push 5 ; jmp 0x790
0x0000000000000804 : and byte ptr [rax], al ; push 6 ; jmp 0x790
0x0000000000000814 : and byte ptr [rax], al ; push 7 ; jmp 0x790
0x0000000000000824 : and byte ptr [rax], al ; push 8 ; jmp 0x790
0x0000000000000834 : and byte ptr [rax], al ; push 9 ; jmp 0x790
0x0000000000000781 : and byte ptr [rax], al ; test rax, rax ; je 0x78a ; call rax
0x000000000000087c : and byte ptr [rax], al ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x00000000000008cd : and byte ptr [rax], al ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x00000000000008cb : and dword ptr [rdi], edx ; and byte ptr [rax], al ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000841 : and eax, 0x201822 ; push 0xa ; jmp 0x790
0x0000000000000831 : and eax, 0x20182a ; push 9 ; jmp 0x790
0x0000000000000821 : and eax, 0x201832 ; push 8 ; jmp 0x790
0x0000000000000811 : and eax, 0x20183a ; push 7 ; jmp 0x790
0x0000000000000801 : and eax, 0x201842 ; push 6 ; jmp 0x790
0x00000000000007f1 : and eax, 0x20184a ; push 5 ; jmp 0x790
0x00000000000007e1 : and eax, 0x201852 ; push 4 ; jmp 0x790
0x00000000000007d1 : and eax, 0x20185a ; push 3 ; jmp 0x790
0x00000000000007c1 : and eax, 0x201862 ; push 2 ; jmp 0x790
0x00000000000007b1 : and eax, 0x20186a ; push 1 ; jmp 0x790
0x00000000000007a1 : and eax, 0x201872 ; push 0 ; jmp 0x790
0x0000000000000ad2 : call 0xffffffffc3e9264b
0x00000000000009cf : call qword ptr [rax + 0x4855c3c9]
0x0000000000000939 : call qword ptr [rbp + 0x48]
0x0000000000000788 : call rax
0x0000000000000b86 : cdqe ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000871 : clc ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000b55 : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xb95
0x0000000000000b4e : cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000b85 : cld ; cdqe ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000001e1 : cld ; jmp 0x1b5
0x0000000000000812 : cmp bl, byte ptr [rax] ; and byte ptr [rax], al ; push 7 ; jmp 0x790
0x0000000000000ad0 : cmp dword ptr [rbp - 0x18], eax ; je 0xaf0 ; jmp 0xb9d
0x0000000000000b95 : cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000870 : cmp eax, edi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000acf : cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x000000000000086f : cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000b87 : cwde ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000abc : dec dword ptr [rax - 0x39] ; lock add byte ptr [rax], al ; add byte ptr [rax], al ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x0000000000000ace : fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x0000000000000aca : fsubp st(7) ; mov esi, 0x3948dead ; call 0xffffffffc3e9264b
0x000000000000077a : in al, dx ; or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x0000000000000933 : in eax, 0x5d ; jmp 0x8a0
0x0000000000000874 : in eax, 0x74 ; sbb dword ptr [rax - 0x75], ecx ; add eax, 0x20175a ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000b4b : inc edi ; cld ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000917 : inc esi ; add eax, 0x201759 ; add dword ptr [rbp - 0x3d], ebx ; nop dword ptr [rax] ; repz ret
0x0000000000000b8c : int1 ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000aad : iretd
0x00000000000007a2 : jb 0x7bc ; and byte ptr [rax], al ; push 0 ; jmp 0x790
0x0000000000000786 : je 0x78a ; call rax
0x0000000000000875 : je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000881 : je 0x890 ; pop rbp ; jmp rax
0x00000000000008c6 : je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x00000000000008d2 : je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000ad3 : je 0xaf0 ; jmp 0xb9d
0x0000000000000b99 : jle 0xb5c ; jmp 0xbb3
0x00000000000001e2 : jmp 0x1b5
0x000000000000022c : jmp 0x201
0x00000000000007ab : jmp 0x790
0x0000000000000935 : jmp 0x8a0
0x0000000000000b5a : jmp 0xb95
0x0000000000000ad5 : jmp 0xb9d
0x0000000000000b9b : jmp 0xbb3
0x0000000000000a35 : jmp 0xffffffffe8000a3c
0x0000000000000e5b : jmp qword ptr [rdi + 2]
0x0000000000000884 : jmp rax
0x0000000000000228 : jo 0x26a ; sbb byte ptr [rdi], bh ; jmp 0x201
0x0000000000000869 : lea eax, [rip + 0x201809] ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000868 : lea rax, [rip + 0x201809] ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x00000000000009d1 : leave ; ret
0x0000000000000ac0 : lock add byte ptr [rax], al ; add byte ptr [rax], al ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x0000000000000acd : lodsd eax, dword ptr [rsi] ; fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x0000000000000ac9 : lodsd eax, dword ptr [rsi] ; fsubp st(7) ; mov esi, 0x3948dead ; call 0xffffffffc3e9264b
0x0000000000000885 : loopne 0x8ed ; nop dword ptr cs:[rax + rax] ; pop rbp ; ret
0x00000000000008d6 : loopne 0x93e ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000000b8f : mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000918 : mov byte ptr [rip + 0x201759], 1 ; pop rbp ; ret
0x0000000000000abe : mov dword ptr [rbp - 0x10], 0 ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x0000000000000b53 : mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000b4c : mov dword ptr [rbp - 4], 0 ; mov dword ptr [rbp - 4], 0 ; jmp 0xb95
0x0000000000000ac6 : mov eax, 0xdeadbeef ; out dx, eax ; mov esi, 0x3948dead ; call 0xffffffffc3e9264b
0x0000000000000b83 : mov eax, dword ptr [rbp - 4] ; cdqe ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x00000000000008c9 : mov eax, dword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000878 : mov eax, dword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x000000000000077d : mov eax, dword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x00000000000008ba : mov eax, esi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000873 : mov ebp, esp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000932 : mov ebp, esp ; pop rbp ; jmp 0x8a0
0x0000000000000224 : mov ecx, 0x700ef18d ; sbb byte ptr [rdi], dil ; jmp 0x201
0x0000000000000b8d : mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000acc : mov esi, 0x3948dead ; call 0xffffffffc3e9264b
0x0000000000000ac8 : mov esi, 0xbeefdead ; lodsd eax, dword ptr [rsi] ; fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x0000000000000abd : mov qword ptr [rbp - 0x10], 0 ; movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x00000000000008c8 : mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000877 : mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x000000000000077c : mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x00000000000008b9 : mov rax, rsi ; shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000872 : mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000931 : mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x0000000000000ac5 : movabs rax, 0xdeadbeefdeadbeef ; cmp qword ptr [rbp - 0x18], rax ; je 0xaf0 ; jmp 0xb9d
0x00000000000009d0 : nop ; leave ; ret
0x0000000000000888 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x000000000000092b : nop dword ptr [rax + rax] ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x0000000000000921 : nop dword ptr [rax] ; repz ret
0x0000000000000887 : nop dword ptr cs:[rax + rax] ; pop rbp ; ret
0x00000000000008d7 : nop word ptr [rax + rax] ; pop rbp ; ret
0x000000000000092a : nop word ptr [rax + rax] ; push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x0000000000000886 : nop word ptr cs:[rax + rax] ; pop rbp ; ret
0x00000000000008d3 : or al, 0x5d ; jmp rax
0x0000000000000847 : or al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x790
0x000000000000077b : or byte ptr [rax - 0x75], cl ; add eax, 0x201865 ; test rax, rax ; je 0x78a ; call rax
0x0000000000000827 : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x790
0x0000000000000837 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x790
0x000000000000086b : or dword ptr [rax], ebx ; and byte ptr [rax], al ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000882 : or eax, 0x66e0ff5d ; nop dword ptr cs:[rax + rax] ; pop rbp ; ret
0x0000000000000acb : out dx, eax ; mov esi, 0x3948dead ; call 0xffffffffc3e9264b
0x0000000000000ac7 : out dx, eax ; mov esi, 0xbeefdead ; lodsd eax, dword ptr [rsi] ; fimul word ptr [rax + 0x39] ; call 0xffffffffc3e9264b
0x0000000000000934 : pop rbp ; jmp 0x8a0
0x0000000000000883 : pop rbp ; jmp rax
0x0000000000000890 : pop rbp ; ret
0x00000000000007a6 : push 0 ; jmp 0x790
0x00000000000007b2 : push 0x18 ; and byte ptr [rax], al ; push 1 ; jmp 0x790
0x0000000000000846 : push 0xa ; jmp 0x790
0x00000000000007b6 : push 1 ; jmp 0x790
0x00000000000007c6 : push 2 ; jmp 0x790
0x00000000000007d6 : push 3 ; jmp 0x790
0x00000000000007e6 : push 4 ; jmp 0x790
0x00000000000007f6 : push 5 ; jmp 0x790
0x0000000000000806 : push 6 ; jmp 0x790
0x0000000000000816 : push 7 ; jmp 0x790
0x0000000000000826 : push 8 ; jmp 0x790
0x0000000000000836 : push 9 ; jmp 0x790
0x0000000000000867 : push rbp ; lea rax, [rip + 0x201809] ; cmp rax, rdi ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000930 : push rbp ; mov rbp, rsp ; pop rbp ; jmp 0x8a0
0x0000000000000928 : repz ret
0x000000000000078e : ret
0x0000000000000c02 : ret 0x4804
0x0000000000000c22 : ret 0x480c
0x0000000000000c42 : ret 0x4814
0x0000000000000b8e : retf 0x1088
0x00000000000008aa : retf 0x2017
0x0000000000000a0c : retf 0x3948
0x0000000000000a08 : retf 0xbabe
0x0000000000000880 : sal byte ptr [rbp + rcx + 0x5d], 0xff ; loopne 0x8ed ; nop dword ptr cs:[rax + rax] ; pop rbp ; ret
0x0000000000000b8a : sal byte ptr [rcx], 1 ; int1 ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000785 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x00000000000008d1 : sal byte ptr [rsp + rcx + 0x5d], 0xff ; loopne 0x93e ; nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000000008c4 : sar esi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x00000000000008c3 : sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x00000000000008c7 : sbb byte ptr [rax - 0x75], cl ; add eax, 0x201721 ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x000000000000086c : sbb byte ptr [rax], ah ; add byte ptr [rax + 0x39], cl ; clc ; mov rbp, rsp ; je 0x890 ; mov rax, qword ptr [rip + 0x20175a] ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000780 : sbb byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000000022a : sbb byte ptr [rdi], bh ; jmp 0x201
0x0000000000000229 : sbb byte ptr [rdi], dil ; jmp 0x201
0x000000000000077f : sbb byte ptr gs:[rax], ah ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000000876 : sbb dword ptr [rax - 0x75], ecx ; add eax, 0x20175a ; test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x0000000000000ad4 : sbb ebp, ecx ; ret
0x00000000000008bd : shr eax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x00000000000008bc : shr rax, 0x3f ; add rsi, rax ; sar rsi, 1 ; je 0x8e0 ; mov rax, qword ptr [rip + 0x201721] ; test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000b7f : std ; adc al, 0x20 ; add byte ptr [rbx - 0x67b703bb], cl ; add rax, rdx ; xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3
0x0000000000000832 : sub bl, byte ptr [rax] ; and byte ptr [rax], al ; push 9 ; jmp 0x790
0x0000000000000c7d : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000000779 : sub esp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x0000000000000c7c : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000000778 : sub rsp, 8 ; mov rax, qword ptr [rip + 0x201865] ; test rax, rax ; je 0x78a ; call rax
0x000000000000088a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000000784 : test eax, eax ; je 0x78a ; call rax
0x000000000000087f : test eax, eax ; je 0x890 ; pop rbp ; jmp rax
0x00000000000008d0 : test eax, eax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000783 : test rax, rax ; je 0x78a ; call rax
0x000000000000087e : test rax, rax ; je 0x890 ; pop rbp ; jmp rax
0x00000000000008cf : test rax, rax ; je 0x8e0 ; pop rbp ; jmp rax
0x0000000000000822 : xor bl, byte ptr [rax] ; and byte ptr [rax], al ; push 8 ; jmp 0x790
0x0000000000000b8b : xor ecx, esi ; mov edx, ecx ; mov byte ptr [rax], dl ; add dword ptr [rbp - 4], 1 ; cmp dword ptr [rbp - 4], 0x1f ; jle 0xb5c ; jmp 0xbb3

Unique gadgets found: 251
